### Starting build.
# Target: getModelString.ml.depends, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:getModelString.ml, ocaml, ocamldep, quiet, short_paths, thread }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules getModelString.ml > getModelString.ml.depends # cached
# Target: protocols.ml.depends, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:protocols.ml, ocaml, ocamldep, quiet, short_paths, thread }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules protocols.ml > protocols.ml.depends # cached
# Target: func.ml.depends, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:func.ml, ocaml, ocamldep, quiet, short_paths, thread }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules func.ml > func.ml.depends # cached
# Target: proctype.ml.depends, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:proctype.ml, ocaml, ocamldep, quiet, short_paths, thread }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules proctype.ml > proctype.ml.depends # cached
# Target: proctype.cmo, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:proctype.cmo, file:proctype.ml, implem, ocaml, quiet, short_paths, thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o proctype.cmo proctype.ml # cached
# Target: func.cmo, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:func.cmo, file:func.ml, implem, ocaml, quiet, short_paths, thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o func.cmo func.ml # cached
# Target: protocols.cmo, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:protocols.cmo, file:protocols.ml, implem, ocaml, quiet, short_paths, thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o protocols.cmo protocols.ml # cached
# Target: tmrLexer.mll, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mll, file:tmrLexer.mll, lexer, ocaml, ocamllex, quiet, short_paths, thread }
/Users/sword/.opam/4.04.0/bin/ocamllex.opt -q tmrLexer.mll
# Target: tmrLexer.ml.depends, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:tmrLexer.ml, ocaml, ocamldep, quiet, short_paths, thread }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules tmrLexer.ml > tmrLexer.ml.depends
# Target: tmrRetparser.mly.depends, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mly, file:tmrRetparser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, short_paths, thread }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' tmrRetparser.mly > tmrRetparser.mly.depends # cached
# Target: tmrRetparser.mly, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:ml, extension:mly, file:tmrRetparser.ml, file:tmrRetparser.mly, infer, menhir, ocaml, parser, quiet, short_paths, thread }
menhir --ocamlc 'ocamlfind ocamlc -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx '\''ppx-jane -as-ppx'\''' --infer tmrRetparser.mly # cached
# Target: tmrRetparser.mli.depends, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mli, file:tmrRetparser.mli, ocaml, ocamldep, quiet, short_paths, thread }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules tmrRetparser.mli > tmrRetparser.mli.depends # cached
# Target: tmrRetparser.cmi, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:mli, file:tmrRetparser.mli, interf, ocaml, quiet, short_paths, thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o tmrRetparser.cmi tmrRetparser.mli # cached
# Target: tmrLexer.cmo, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:tmrLexer.cmo, file:tmrLexer.ml, implem, ocaml, quiet, short_paths, thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o tmrLexer.cmo tmrLexer.ml
+ ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o tmrLexer.cmo tmrLexer.ml
findlib: [WARNING] Interface base.cmi occurs in several directories: ., /Users/sword/.opam/4.04.0/lib/base
# Target: getModelString.cmo, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:getModelString.cmo, file:getModelString.ml, implem, ocaml, quiet, short_paths, thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o getModelString.cmo getModelString.ml # cached
# Target: tmrRetparser.ml.depends, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:tmrRetparser.ml, ocaml, ocamldep, quiet, short_paths, thread }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules tmrRetparser.ml > tmrRetparser.ml.depends # cached
# Target: tmrRetparser.cmo, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:tmrRetparser.cmo, file:tmrRetparser.ml, implem, ocaml, quiet, short_paths, thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o tmrRetparser.cmo tmrRetparser.ml # cached
# Target: getModelString.byte, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, debug, dont_link_with, extension:byte, file:getModelString.byte, link, ocaml, program, quiet, short_paths, thread }
ocamlfind ocamlc -linkpkg -g -thread -package core proctype.cmo func.cmo protocols.cmo tmrRetparser.cmo tmrLexer.cmo getModelString.cmo -o getModelString.byte
+ ocamlfind ocamlc -linkpkg -g -thread -package core proctype.cmo func.cmo protocols.cmo tmrRetparser.cmo tmrLexer.cmo getModelString.cmo -o getModelString.byte
findlib: [WARNING] Interface base.cmi occurs in several directories: ., /Users/sword/.opam/4.04.0/lib/base
# Compilation successful.
