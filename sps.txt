Protocol SPS:
Types:{
    Agent:A.B;
    Number:g
}
Knowledges:{
    A : <A.B.const(g).k(A,B).nonce(Na).const(x)>;
    B : <B.A.const(g).k(A,B).const(y)>
}
Agents:{
    A:const(g).const(x).k(A,B).nonce(Na),
    [1]+,B,(const(x)): senc{exp(const(g),const(x))}k(A,B),
    [2]-:senc{tmp(m2)}k(A,B),
    [3]+,B,(nonce(Na)):aenc{nonce(Na)}exp(tmp(m2),const(x));

    B:Y.k(A,B),
    [1]-:senc{tmp(m1)}k(A,B),
    [2]+,A,(const(y)):senc{exp(const(g),const(y))}k(A,B),
    [3]-:aenc{nonce(Na)}tmp(m3)
}
Environment:{
[agent1] A [1] : <Alice.Intruder.const(g).const(x).k(A,B).nonce(Na)>;
[agent2] B [1] : <Bob.Intruder.const(g).const(y).k(A,B)>
}
Goals:{
    [secrecy1] nonce(Na)
}
end
